server.port=${port:3000}
#my.host = ${METAMAP_HOST:localhost}
#my.port = ${METAMAP_PORT:8087}
#default_options = -y -R

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-disease = com.mysql.jdbc.Driver
spring.datasource.url = ${DISNET_DATASOURCE_URL:jdbc:mysql://localhost:3306/disnetdb?autoReconnect=true&useSSL=false}
spring.datasource.username = ${MYSQL_USER:disnet_usr}
spring.datasource.password = ${MYSQL_PASSWORD:NewPwd2017}
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#spring.datasource.tomcat.max-wait= 20000
#spring.datasource.tomcat.max-active= 50
#spring.datasource.tomcat.max-idle= 20
#spring.datasource.tomcat.min-idle= 15

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto = validation
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = Thymeleaf configurations
# ===============================
#spring.thymeleaf.mode=LEGACYHTML5 you will need the NekoHTML 1.9.21 or later
#spring.thymeleaf.cache=false

# ===============================
# = TVP AND METAMAP API LINKS
# ===============================
URI.TVP.API = ${TVP_API_LINK: http://localhost:8083/tvp/api}
URI.DISNET.API = ${METAMAP_API_LINK: http://localhost:8083/queries/api}

# ===============================
# = JSON Web Token
# ===============================
jwt.header = Authorization
jwt.secret = mySecret
jwt.expiration = 604800
jwt.route.authentication.path = auth
jwt.route.authentication.refresh = refresh

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query = SELECT p.person_id, p.password, p.enabled FROM person p WHERE p.status = 'OK' AND p.person_id=?
spring.queries.roles-query = SELECT p.person_id, pp.authority FROM person p INNER JOIN profile pp ON pp.profile_id = p.profile_id WHERE p.status = 'OK' AND p.person_id=? 

# ===============================
# = EMAIL Configuration
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${DISNET_EMAIL:gerardo.lagunes@ctb.upm.es}
spring.mail.password=${DISNET_PASSWORD:DisnetM@il007}
spring.mail.properties.mail.smtp.starttls.enabled=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

email.template.confirmation = ${EMAIL_TAMPLATE_CONFIRMATION:email/confirmation_email}
email.template.welcome = ${EMAIL_TAMPLATE_WELCOME:email/welcome}

email.template.confirmation.subject = ${EMAIL_TAMPLATE_CONFIRMATION_SUBJECT:DISNET Confirmation Email}
email.template.welcome.subject = ${EMAIL_TAMPLATE_WELCOME_SUBJECT:DISNET Welcome Email}


# ===============================
# = CONSTANTS
# ===============================
http.header = ${HTTP_HEADER:http://}
https.header = ${HTTPS_HEADER:https://}
url.user.confirmation = ${URL_USER_CONFIRMATION:/user/confirmation}
parameter.user.confirmation.token.name = ${PARAMETER_USER_CONFIRMATION_TOKEN_NAME:token}